@page "/categorias/list"
@using RestauranteApp.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="container mr-5 ml-5">
    <h3>Categoria</h3>

    <hr />
    <a href="categorias/crear" class="btn btn-success">Nuevo <i class="bi bi-file-earmark-plus"></i></a>
    <br />
    <br />


    @if (_categorias == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <table class="table table-hover table-bordered">
            <thead class="table-success">
                <tr>
                    <th>Id:</th>
                    <th>Descripcion:</th>
                    <th>Observacion:</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _categorias)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nombre</td>
                        <td>@item.Observacion</td>
                        <td>
                            <button Class="colorEditar" @onclick="()=>Editar(item.Id)"><i class="bi bi-pencil-fill"></i></button>&nbsp;&nbsp;&nbsp;
                            <button Class="colorEliminar" @onclick="()=>Eliminar(item.Id)"><i class="bi bi-trash-fill"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>




@code {
    private CategoriaDto[]? _categorias;
    protected override async Task OnInitializedAsync()
    {
        await Cargar();
    }
    private async Task Cargar()
    {
        _categorias = await Http.GetFromJsonAsync<CategoriaDto[]>("api/categorias");
    }
    private void Editar(int id)
    {
        NavigationManager.NavigateTo($"categorias/editar/{id}");
    }
    private async void Eliminar(int id)
    {
        await Http.DeleteAsync($"api/categorias/{id}");
        await Cargar();
    }
}
