
@using RestauranteApp.Client.Autorizacion
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SweetAlertService Swal

 
<header>
    
    <nav class="navbar navbar-expand-lg colorMenu" data-bs-theme="dark">
        <div class="container-fluid">
            <NavLink class="navbar-brand" href="/">
                <img src="assets/images/Logo-removebg-preview.png" alt="Moustaches" width="80px"/>
            </NavLink>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navegacion" aria-controls="navegacion" aria-expanded="false" aria-label="Alternar navegacion">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navegacion">
                <ul class="navbar-nav me-auto mb-2">
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="/">Inicio</NavLink>
                    </li> 
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="categorias/list">Categorias</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="marcas/list">Marcas</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="productos/list">Productos</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="proveedores/list">Proveedor</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="tipoPagos/list">Tipo de pago</NavLink>
                    </li>

                   @*  Rol de administrador *@
                    <AuthorizeView Roles="@Constantes.RolAdministrador">
                        <Authorized>
                            <li class="nav-item">
                                @* <NavLink class="nav-link text-white" href="dashboard">Dashboard</NavLink> *@
                            </li>
                        </Authorized>
                    </AuthorizeView>

                </ul>
            </div>
            <a class="ms-auto me-3 " href="carrito">
                <img src="assets/images/shoppingCar.png" alt="Carrito" class="me-1" style="height: 30px;"> 
            </a>
           
            <div>
                <AuthorizeView>
                    <Authorized>
                        <NavLink class="navbar-text text-warning">
                            <i class="bi bi-person-fill me-1"></i>@context.User.Identity!.Name
                        </NavLink>
                        <a class="ms-auto me-3" @onclick="CerrarSesion"href="#">
                            <img src="assets/images/close_delete.png" alt="Salir" class="me-1" style="height: 40px;">
                        </a>
                    </Authorized>
                    <NotAuthorized>
                        <NavLink class="btn btn-outline-warning" href="login"><i class="bi bi-arrow-right-circle me-1"></i>Ingresar</NavLink>
                        

                        <NavLink class="btn btn-outline-warning" href="register"><i class="bi bi-person-fill-add me-1"></i>Registrarse</NavLink>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </nav>
</header>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task CerrarSesion()
    {
        
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Desea salir?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                ConfirmButtonText = "Si",
                CancelButtonText = "Por ahora no"
            });

        if (result.IsConfirmed)
        {
            var auth = (AuthenticacionService)AuthenticationStateProvider;
            await auth.Autenticar(null);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }

        
    }


    
}
